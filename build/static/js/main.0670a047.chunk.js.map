{"version":3,"sources":["apiCalls.js","Components/Home.js","Components/login.js","Components/Activities.js","Components/SingleActivity.js","Components/Routines.js","Components/MyRoutines.js","Components/CreatorPublicRoutines.js","index.js","helperFunctions.js"],"names":["BaseUrl","register","username","password","setToken","a","fetch","method","headers","body","JSON","stringify","response","json","result","console","log","error","alert","message","token","localStorage","setItem","login","getUser","getRoutinesByUser","getActivities","postActivity","name","description","editActivity","activityId","getRoutinesByActivity","getRoutines","postRoutine","goal","isPublic","editRoutine","routineId","deleteRoutine","attachActivity","count","duration","editRoutineActivity","routineActivityId","deleteRoutineActivity","Home","useState","setUsername","useEffect","className","Login","match","history","setPassword","confirmPassword","setConfirmPassword","onSubmit","event","preventDefault","url","push","htmlFor","id","placeholder","value","onChange","target","type","to","Activities","setSelectedActivity","activities","setActivities","setName","setDescription","newActivity","setNewActivity","newlyCreatedActivity","map","activity","idx","href","onClick","SingleActivity","routines","setRoutines","setActivity","editedActivity","setEditedActivity","filteredActivity","filter","parseInt","params","length","routine","creatorName","Routines","key","NewRoutine","setMyRoutines","setGoal","newRoutine","reset","DeleteRoutine","deletedRoutine","EditRoutine","edit","setEdit","editedRoutine","AddActivity","setCount","setDuration","setActivityId","addActivity","setAddActivity","Activity","RemoveActivity","deletedRoutineActivity","EditRoutineActivity","editedRoutineActivity","MyRoutines","myRoutines","user","setUser","userTemp","CreatorPublicRoutines","userRoutines","setUserRoutines","App","getItem","removeItem","logout","exact","path","render","routeProps","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0670a047.chunk.js","sourcesContent":["const BaseUrl = \"http://fitnesstrac-kr.herokuapp.com/\";\n\nasync function register(username, password, setToken)\n{\n    try {\n        const response = await fetch(BaseUrl + 'api/users/register', {\n        method: \"POST\",\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n            username,\n            password\n        })\n        })\n        const result = await response.json();\n        console.log(result);\n        if (result.error) {\n            alert(result.message);\n        }\n        setToken(result.token);\n        localStorage.setItem('token', result.token)\n        return result;\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nasync function login(username, password, setToken)\n{\n    try {\n        const response = await fetch(BaseUrl + 'api/users/login', {\n        method: \"POST\",\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n            username,\n            password\n        })\n        })\n        const result = await response.json();\n        console.log(result);\n        if (result.error) {\n            alert(result.message);\n            return;\n        }\n        setToken(result.token);\n        localStorage.setItem('token', result.token);\n        return result;\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nasync function getUser(token)\n{\n    try {\n        const response = await fetch(BaseUrl + 'api/users/me', {\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + token\n        },\n        })\n        const result = await response.json();\n        console.log(result);\n        return result;\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nasync function getRoutinesByUser(username, token)\n{\n    try{\n        const response = await fetch(BaseUrl + 'api/users/'+ username + '/routines', {\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + token\n        },\n        })\n        const result = await response.json();\n        console.log(result);\n        return result;\n    } catch(error) {\n        console.error(error);\n    }\n   \n   \n}\n\nasync function getActivities()\n{\n    try {\n        const response = await fetch(BaseUrl + 'api/activities', {\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        })\n        const result = await response.json();\n        console.log(result);\n        return result;\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nasync function postActivity(token, name, description)\n{\n    try {\n        const response = await fetch(BaseUrl + 'api/activities', {\n        method: \"POST\",\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + token\n        },\n        body: JSON.stringify({\n            name,\n            description\n        })\n        })\n        const result = await response.json();\n        console.log(result)\n        return result;\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nasync function editActivity(token, activityId, name, description)\n{\n    try {\n        const response = await fetch(BaseUrl + 'api/activities/' + activityId, {\n        method: \"PATCH\",\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + token\n        },\n        body: JSON.stringify({\n            name,\n            description\n        })\n        })\n        const result = await response.json();\n        return result;\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nasync function getRoutinesByActivity(activityId)\n{\n    try {\n        const response = await fetch(BaseUrl + 'api/activities/'+ activityId + '/routines', {\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        })\n        const result = await response.json();\n        console.log(result);\n        return result;\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nasync function getRoutines()\n{   try {\n        const response = await fetch(BaseUrl + 'api/routines', {\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        })\n            const result = await response.json();\n            console.log(result);\n            return result;\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nasync function postRoutine(token, name, goal, isPublic)\n{   \n    try {\n        const response = await fetch(BaseUrl+ 'api/routines', {\n        method: \"POST\",\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + token\n        },\n        body: JSON.stringify({\n            name,\n            goal,\n            isPublic\n        })\n        })\n        const result = await response.json();\n        console.log(result);\n        return result;\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nasync function editRoutine(token, routineId, name, goal)\n{\n    try {\n        const response = await fetch(BaseUrl + 'api/routines/' + routineId, {\n        method: \"PATCH\",\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + token\n        },\n        body: JSON.stringify({\n            name,\n            goal\n        })\n        })\n        const result = await response.json();\n        console.log(result);\n        return result;\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nasync function deleteRoutine(token, routineId)\n{\n    try {\n        const response = await fetch(BaseUrl + 'api/routines/' + routineId, {\n        method: \"DELETE\",\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + token\n        },\n        })\n        const result = await response.json();\n        console.log(result);\n        return result;\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nasync function attachActivity(routineId, activityId, count, duration)\n{\n    try {\n        const response = await fetch(BaseUrl + 'api/routines/'+ routineId + '/activities', {\n        method: \"POST\",\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            activityId,\n            count, \n            duration\n        })\n        })\n        const result = await response.json();\n        console.log(result);\n        return result;\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nasync function editRoutineActivity(token, routineActivityId, count, duration)\n{\n    try {\n        const response = await fetch(BaseUrl + 'api/routine_activities/' + routineActivityId, {\n        method: \"PATCH\",\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + token\n        },\n        body: JSON.stringify({\n            count,\n            duration\n        })\n        })\n        const result = await response.json();\n        console.log(result);\n        return result;\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nasync function deleteRoutineActivity(token, routineActivityId)\n{\n    try {\n        const response = await fetch(BaseUrl + 'api/routine_activities/'+ routineActivityId, {\n        method: \"DELETE\",\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + token\n        }\n        })\n        const result = await response.json();\n        console.log(result);\n        return result;\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nexport {register,\n        login, \n        getUser, \n        getRoutinesByUser, \n        getActivities, \n        postActivity, \n        editActivity, \n        getRoutinesByActivity, \n        getRoutines, \n        postRoutine, \n        editRoutine,\n        deleteRoutine, \n        attachActivity,\n        editRoutineActivity, \n        deleteRoutineActivity};\n\n\n\n\n\n","import React, {useState, useEffect} from \"react\";\r\nimport { getUser } from \"../apiCalls\";\r\n\r\nconst Home = ({token}) => {\r\n    const [username, setUsername] = useState('');\r\n\r\n    useEffect(async () => {\r\n        const result = await getUser(token);\r\n\r\n        setUsername(result.username);\r\n    }, [token])\r\n    return (\r\n        <h1 className='home'>Welcome {username? username : 'Stranger'}</h1>\r\n    )\r\n}\r\n\r\nexport default Home;","import React, {useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport {login, register} from '../apiCalls'\r\n\r\nconst Login = ({match, history, setToken}) => {\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n    return (\r\n        <form\r\n        onSubmit={async (event) => {\r\n            event.preventDefault();\r\n\r\n            if (match.url === '/register') {\r\n                if (confirmPassword !== password) {\r\n                    alert('password and confirm password must match');\r\n                    return;\r\n                } else {\r\n                    await register(username, password, setToken);\r\n                    \r\n                    \r\n                }\r\n                \r\n            } else {\r\n                const result = await login(username, password, setToken)\r\n                history.push('/');\r\n                \r\n            }\r\n        }}>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"username\" className='form-label'>Username</label>\r\n                <input \r\n                className='form-control'\r\n                id='username'\r\n                placeholder='username'\r\n                value={username}\r\n                onChange={(event) => setUsername(event.target.value)}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"password\" className='form-label'>Password</label>\r\n                <input \r\n                className='form-control'\r\n                id='password'\r\n                type='password'\r\n                placeholder='password'\r\n                value={password}\r\n                onChange={(event) => setPassword(event.target.value)}/>\r\n            </div>\r\n            {match.url === '/register'?\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"confirm-password\" className='form-label'>Confirm Password</label>\r\n                    <input \r\n                    className='form-control'\r\n                    id='confirm-password'\r\n                    type='password'\r\n                    placeholder='confirm password'\r\n                    value={confirmPassword}\r\n                    onChange={(event) => setConfirmPassword(event.target.value)}/>\r\n                </div>\r\n                :\r\n                null\r\n            }\r\n            <input type='submit' className=\"btn btn-primary\"/>\r\n            { // Adjust the link displayed to the user depending on the page they are on\r\n                match.url === '/register'?\r\n                    <Link to='/login'>Already have an account?</Link>\r\n                    :\r\n                    <Link to='/register'>Don't have an account?</Link>\r\n            }\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Login;","import React, {useState, useEffect} from \"react\";\r\nimport { getActivities, postActivity } from \"../apiCalls\";\r\n\r\nconst Activities = ({history, token, setSelectedActivity}) => {\r\n    const [activities, setActivities] = useState([]);\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [newActivity, setNewActivity] = useState('');\r\n\r\n    useEffect(async () => {\r\n        const result = await getActivities()\r\n        setActivities(result);\r\n    }, [newActivity])\r\n\r\n    return (\r\n        <>\r\n            <h1 className='title'>Activities</h1>\r\n            {token?\r\n                <>\r\n                <h2>Add New Activity</h2>\r\n                <form\r\n                onSubmit={async (event) => {\r\n                    event.preventDefault();\r\n                    if (!name || !description) {\r\n                        alert('Please fill out all required fields');\r\n                        return;\r\n                    }\r\n                    const newlyCreatedActivity = await postActivity(token, name, description);\r\n                    if (newlyCreatedActivity.error) alert(newlyCreatedActivity.message);\r\n                    else {\r\n                        setNewActivity(newlyCreatedActivity);\r\n                        setName('');\r\n                        setDescription('');\r\n                    }\r\n\r\n                }}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <input \r\n                            className=\"form-control\"\r\n                            placeholder='Name*'\r\n                            value={name}\r\n                            onChange={(event) => setName(event.target.value)} />\r\n                        </div>\r\n                        <div className=\"col\">\r\n                        <input \r\n                        className=\"form-control\"\r\n                        placeholder='Description*'\r\n                        value={description}\r\n                        onChange={(event) => setDescription(event.target.value)} />\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <input className=\"btn btn-primary\" type='submit' />\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                </>\r\n                :\r\n                null\r\n            }\r\n            <div className=\"list-group\">\r\n                {activities?\r\n                    activities.map((activity, idx) => {\r\n                        return (<a \r\n                        id='activity'\r\n                        className=\"list-group-item list-group-item-action flex-column align-items-start\"\r\n                        href=\"\"\r\n                        key={idx}\r\n                        onClick={() => {\r\n                            setSelectedActivity(activity);\r\n                            history.push(`/activities/${activity.id}`);\r\n                        }}>\r\n                            <h3>{activity.name}</h3>\r\n                            <p>Description: {activity.description}</p>\r\n                        </a>\r\n                        )\r\n                    })\r\n                    :\r\n                    null\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Activities;","import React, {useState, useEffect} from \"react\";\r\nimport { editActivity, getRoutinesByActivity, getActivities } from \"../apiCalls\";\r\n\r\nconst SingleActivity = ({match, token}) => {\r\n    const [routines, setRoutines] = useState('');\r\n    const [activity, setActivity] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [editedActivity, setEditedActivity] = useState('');\r\n\r\n    useEffect(async () => {\r\n        const activities = await getActivities();\r\n        const filteredActivity = activities.filter((activity) => parseInt(match.params.activityId) === activity.id);\r\n        setActivity(filteredActivity[0]);\r\n\r\n        setName(filteredActivity[0].name);\r\n        setDescription(filteredActivity[0].description);\r\n\r\n        const result = await getRoutinesByActivity(match.params.activityId);\r\n        setRoutines(result);\r\n    }, [editedActivity])\r\n    return (\r\n        <div className='container'>\r\n        <div>\r\n            <h1>{activity.name}</h1>\r\n            <p><b>Name: </b>{activity.name}</p>\r\n            <p><b>Description: </b>{activity.description}</p>\r\n        </div>\r\n        {token?\r\n            <div>\r\n                <h3>Edit Activity</h3>\r\n                <form\r\n                onSubmit={async (event) => {\r\n                    event.preventDefault();\r\n\r\n                    const result = await editActivity(token, match.params.activityId, name, description);\r\n                    if (result.error) alert(result.message);\r\n                    setEditedActivity(result);\r\n                }}>\r\n                    <input\r\n                    placeholder='name'\r\n                    value={name}\r\n                    onChange={(event) => {\r\n                        setName(event.target.value);\r\n                    }} />\r\n                    <input\r\n                    placeholder='description'\r\n                    value={description}\r\n                    onChange={(event) => {\r\n                        setDescription(event.target.value);\r\n                    }} />\r\n                    <input type='submit' />\r\n                </form>\r\n            </div>\r\n            :\r\n            null\r\n        }\r\n        <h2>Related Routines</h2>\r\n        {routines.length?\r\n            routines.map((routine, idx) => {\r\n                return (\r\n                    <div key={idx} className = \"outerBorder smallMargin\">\r\n                        <div id=\"activities-routine\">\r\n                            <div className = \"titleBar\">\r\n                            <h4>{routine.name}</h4>\r\n                            <p>Created by {routine.creatorName}</p>\r\n                            </div>\r\n                            <p><b>Goal: </b>{routine.goal}</p>\r\n                        </div>\r\n                        {routine.activities.map((activity, idx) => {\r\n                            return (\r\n                                <div key={idx} className = \"blackBorder smallMargin\">\r\n                                    <div className = \"titleBar\">\r\n                                    <h5>{activity.name}</h5>\r\n                                    </div>\r\n                                    <p><b>Description: </b>{activity.description}</p>\r\n                                    <p><b>Duration: </b>{activity.duration}</p>\r\n                                    <p><b>Count: </b>{activity.count}</p>\r\n                                </div>\r\n                            )\r\n                        })\r\n\r\n                        }\r\n                    </div>\r\n                )\r\n            })\r\n            :\r\n            <h3>No related routines</h3>\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SingleActivity;","import React, {useState, useEffect} from \"react\";\nimport { getRoutines } from \"../apiCalls\";\n\n\nconst Routines = ({ history}) => {\n    const [routines, setRoutines] = useState([]);\n    \n\n    useEffect(async () => {\n        setRoutines(await getRoutines());\n\n    }, [])\n\n    \n    return (\n    <>\n        <h1 className = \"title\">Routines</h1>\n        {routines.map((routine, key) => {return(\n        <div key = {key} className = \"outerBorder smallMargin\">\n            <div className = \"titleBar\" >\n                <h4><b>{routine.name}</b></h4>\n                <h4>\n                Created By  \n                <a \n                href=''\n                onClick={() => {\n                    history.push(`/routines/${routine.creatorName}`)\n                }}>\n                    {routine.creatorName}\n                </a>\n            </h4>\n            </div>\n            \n            <p><b>Goal: </b>{routine.goal}</p>\n            \n            <h5><b>Activities:</b> </h5>\n            {routine.activities.map((activity, key) => {\n                return <div key = {key} className = \"blackBorder smallMargin\">\n                    \n                    <a href =\"\" onClick={() => {\n                        history.push(`/activities/${activity.id}`);\n                    }}>\n                        <p><b>{activity.name}</b></p>\n                    </a> \n                    <p><b>Description: </b>{activity.description}</p>\n                    <p><b>Duration: </b>{activity.duration}</p>\n                    <p><b>Count: </b>{activity.count}</p>\n                </div>\n            })}\n        </div>)})}\n    </>\n    )\n}\n\nexport default Routines;","import React, {useState, useEffect} from \"react\";\nimport { getUser, getRoutinesByUser, getActivities, postRoutine, deleteRoutine, editRoutine, attachActivity, deleteRoutineActivity, editRoutineActivity} from \"../apiCalls\";\n\n\nconst NewRoutine = ({token, setMyRoutines, username}) => {\n    const [name, setName] = useState(\"\");\n    const [goal, setGoal] = useState(\"\");\n\n    return <>\n        <h2>Add New Routine </h2>\n        <form className = \"mb-3\" onSubmit = {async (event) => {\n            event.preventDefault();\n            const newRoutine = await postRoutine(token, name, goal, true);\n                    \n            if (newRoutine.error) alert(newRoutine.message);\n            else{setMyRoutines(await getRoutinesByUser(username, token));\n                event.target.reset();}\n                \n                \n            }}>\n            <input className = \"form-control\"\n                    placeholder='Name*'\n                    onChange={(event) => setName(event.target.value)} />\n            <textarea className = \"form-control\"\n                    placeholder='Goal*'\n                    onChange={(event) => setGoal(event.target.value)} />\n            <input type='submit' />\n        </form>\n        </>\n}\n\nconst DeleteRoutine = ({token, routine, setMyRoutines, username}) => {\n    return  <button onClick = {async () => { \n            const deletedRoutine = await deleteRoutine(token, routine.id);\n            if (deletedRoutine.error) alert(deletedRoutine.message);\n            else{setMyRoutines(await getRoutinesByUser(username, token));}\n        }\n    }> Delete Routine</button>\n}\n\nconst EditRoutine = ({token, routine, setMyRoutines, username}) => {\n    const [name, setName] = useState(\"\");\n    const [goal, setGoal] = useState(\"\");\n    const [edit, setEdit] = useState(false);\n    return <>\n    <button onClick = {() => {setEdit(!edit)}}>Edit Routine</button>\n    {edit?\n    <form className = \"mb-3 card card-body\" onSubmit = {async (event) => {\n        event.preventDefault();\n        const editedRoutine = await editRoutine(token, routine.id, name, goal);\n        if (editedRoutine.error) alert(editedRoutine.message);\n        else{\n            setMyRoutines(await getRoutinesByUser(username, token));\n            event.target.reset();\n        }\n\n    }}>\n    <input className = \"form-control\"\n        placeholder='Name*'\n        onChange={(event) => setName(event.target.value)} />    \n    <textarea className = \"form-control\"\n        placeholder='Goal*'\n        onChange={(event) => setGoal(event.target.value)} />\n        <input type='submit' />\n    </form>: null }</>\n\n   \n}\n\nconst AddActivity = ({token, activities, routine, setMyRoutines, username}) => {\n    const [count, setCount] = useState(\"\");\n    const [duration, setDuration] = useState(\"\");\n    const [activityId, setActivityId] = useState(\"\");\n    const [addActivity, setAddActivity] = useState(false);\n\n    return <>\n    <button onClick = {() => {setAddActivity(!addActivity)}}>Add Activity to Routine</button>\n    { addActivity ?\n    <form className = \"mb-3\" onSubmit = {async (event) => {\n        event.preventDefault();\n        const activity = attachActivity(routine.id, activityId, count, duration);\n        if (activity.error) alert(activity.message);\n        else{setMyRoutines(await getRoutinesByUser(username, token));\n            event.target.reset();}\n    }}>\n        <select onChange = {(event) => {setActivityId(event.target.value)}}>\n            <option value = {\"none\"}> Select an activity: </option>\n            {activities.map((activity, key) => {\n                return <option key = {key} value = {activity.id} >{activity.name}</option>\n            })}\n        </select>\n        <input \n            placeholder='Count*'\n            onChange={(event) => setCount(event.target.value)} />\n         <input \n            placeholder= 'Duration*'\n            onChange={(event) => setDuration(event.target.value)} />\n        <input type = 'submit' />\n    </form> : null }</>\n}\n\nconst Activity = ({activity}) => {\n    return <>\n    <p><b>Description: </b>{activity.description}</p>\n    <p><b>Duration: </b>{activity.duration}</p>\n    <p><b>Count: </b>{activity.count}</p>\n    </>\n}\n\nconst RemoveActivity = ({token, activity, setMyRoutines, username}) => {\n    return <button onClick = { async () => {\n        const deletedRoutineActivity = await deleteRoutineActivity(token, activity.routineActivityId);\n        if (deletedRoutineActivity.error) alert(deletedRoutineActivity.message);\n        else{setMyRoutines(await getRoutinesByUser(username, token));}\n    }}>Remove Activity</button>\n}\n\nconst EditRoutineActivity = ({token, activity, setMyRoutines, username}) => {\n    const [count, setCount] = useState(\"\");\n    const [duration, setDuration] = useState(\"\");\n    const [edit, setEdit] = useState(false);\n    return <>\n    <button onClick = {() => {setEdit(!edit)}}>Edit Routine Activity</button>\n    { edit? \n    <form onSubmit = {async (event) => {\n        event.preventDefault();\n        const editedRoutineActivity = await editRoutineActivity(token, activity.routineActivityId, count, duration);\n        if (editedRoutineActivity.error) alert(editedRoutineActivity.message);\n        else{setMyRoutines(await getRoutinesByUser(username, token));\n            event.target.reset();}\n    }}>\n    <input \n        placeholder='Count*'\n        onChange={(event) => setCount(event.target.value)} />\n    <input \n        placeholder= 'Duration*'\n        onChange={(event) => setDuration(event.target.value)} />\n    <input type = 'submit' />\n    </form> : null}</>\n}\n\nconst MyRoutines = ({token}) => {\n    const [myRoutines, setMyRoutines] = useState([]);\n    const [activities, setActivities] = useState([]);\n    const [user, setUser] = useState({});\n\n    useEffect(async () => {\n        const userTemp = await getUser(token);\n        setMyRoutines(await getRoutinesByUser(userTemp.username, token));\n        setActivities(await getActivities());\n        setUser(userTemp);\n    }, [])\n\n    return(<>\n    <h1 className = \"title\">My Routines</h1>\n    <NewRoutine  token = {token} setMyRoutines = {setMyRoutines} username = {user.username}/>\n    {myRoutines.map((routine, key) => {\n        return(<div key = {key} className = \"outerBorder smallMargin\">\n            <div className = \"titleBar\">\n                <h4><b>{routine.name}</b></h4>\n                <h4><b>Created By {routine.creatorName}</b></h4>\n                <DeleteRoutine token = {token} routine = {routine} setMyRoutines = {setMyRoutines} username = {user.username}/>\n            </div>\n            <p><b>Goal: </b>{routine.goal}</p>\n                <EditRoutine token = {token} routine = {routine} setMyRoutines = {setMyRoutines} username = {user.username}/>\n            <h5><b>Routine Activities: </b></h5>\n            {routine.activities.map((activity, key) => {\n                return <div key = {key} className = \"blackBorder smallMargin\">\n                    <div className = \"titleBar\">\n                        <h5><b>{activity.name}</b></h5>\n                        <RemoveActivity token = {token} activity = {activity} setMyRoutines = {setMyRoutines} username = {user.username}/>\n                    </div>\n                    <Activity activity = {activity} />\n                        <EditRoutineActivity token = {token} activity = {activity} setMyRoutines = {setMyRoutines} username = {user.username}/>\n                    </div>\n            })}\n                <AddActivity token = {token} activities = {activities} routine = {routine} setMyRoutines = {setMyRoutines} username = {user.username}/>\n        </div>\n        \n          \n        )\n    })}\n\n    </>)\n\n}\n\nexport default MyRoutines;","import React, {useState, useEffect} from \"react\";\r\nimport { getRoutinesByUser } from \"../apiCalls\";\r\n\r\nconst CreatorPublicRoutines = ({match, token}) => {\r\n    const [userRoutines, setUserRoutines] = useState([]);\r\n\r\n    useEffect(async () => {\r\n        const result = await getRoutinesByUser(match.params.username, token);\r\n        setUserRoutines(result);\r\n    }, [token])\r\n    return (\r\n        <>\r\n        <h1 className = \"title\" >{match.params.username}'s Routines</h1>\r\n        {userRoutines.length?\r\n            userRoutines.map((routine, idx) => {\r\n                return (\r\n                    <div key={idx} className = \"outerBorder smallMargin\">\r\n                        <div id=\"activities-routine\">\r\n                            <div className = \"titleBar\">\r\n                                <h4><b>{routine.name}</b></h4>\r\n                                <p><b>Creator: </b>{routine.creatorName}</p>\r\n                            </div>\r\n                            <p><b>Goal: </b>{routine.goal}</p>\r\n                        </div>\r\n                        {routine.activities.map((activity, idx) => {\r\n                            return (\r\n                                <div key={idx} className =  \"blackBorder smallMargin\">\r\n                                    <div className = \"titleBar\">\r\n                                    <h5>{activity.name}</h5>\r\n                                    </div>\r\n                                    <p><b>Description: </b>{activity.description}</p>\r\n                                    <p><b>Duration: </b>{activity.duration}</p>\r\n                                    <p><b>Count: </b>{activity.count}</p>\r\n                                </div>\r\n                            )\r\n                        })\r\n\r\n                        }\r\n                    </div>\r\n                )\r\n            })\r\n            :\r\n            null\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreatorPublicRoutines;","import React, {useEffect, useState} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport {Home, Login, Activities, SingleActivity, Routines, MyRoutines, CreatorPublicRoutines} from './Components'\r\nimport { logout } from './helperFunctions';\r\n\r\nconst App = () => {\r\n\r\n    const [token, setToken] = useState(localStorage.getItem('token'));\r\n    const [selectedActivity, setSelectedActivity] = useState('');\r\n\r\n    useEffect(() => {\r\n\r\n    }, [token])\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <div id='nav' className=\"btn-group\">\r\n                    <h3 className='nav-element'>Fitness Trac.kr</h3>\r\n                    <Link className=\"btn btn-primary nav-element\" to='/'>Home</Link>\r\n                    <Link className=\"btn btn-primary nav-element\" to='/routines'>Routines</Link>\r\n                    <Link className=\"btn btn-primary nav-element\" to='/activities'>Activities</Link>\r\n                    \r\n                    {!token?\r\n                        <>\r\n                        <Link className=\"btn btn-primary nav-element\" to='/login'>Login</Link>\r\n                        <Link className=\"btn btn-primary nav-element\" to='/register'>Register</Link>\r\n                        </>\r\n                        :\r\n                        <>\r\n                        <Link className=\"btn btn-primary nav-element\" to='/my-routines'>MyRoutines</Link>\r\n                        <Link\r\n                        className=\"btn btn-primary nav-element\" \r\n                        to='/login'\r\n                        onClick={() => {\r\n                            logout(setToken);\r\n                        }}>Logout</Link>\r\n                        </>\r\n                    }\r\n                </div>\r\n                <div id='mainsection'>\r\n                    <Route exact path='/' render={(routeProps) => <Home {...routeProps} token={token}/>}></Route>\r\n                    <Route path='/login' render={(routeProps) => <Login {...routeProps} setToken={setToken}/>}></Route>\r\n                    <Route path='/register' render={(routeProps) => <Login {...routeProps} setToken={setToken}/>}></Route>\r\n                    <Route exact path='/activities' render={(routeProps) => <Activities {...routeProps} token={token} setSelectedActivity={setSelectedActivity}/>}></Route>\r\n                    <Route path='/activities/:activityId' render={(routeProps) => <SingleActivity {...routeProps} token={token}/>}></Route>\r\n                    <Route exact path='/routines' render={(routeProps) => <Routines {...routeProps} token = {token}/>}></Route>\r\n                    <Route path='/my-routines' render={(routeProps) => <MyRoutines {...routeProps} token = {token}/>}></Route>\r\n                    <Route path='/routines/:username' render={(routeProps) => <CreatorPublicRoutines {...routeProps} token={token}/>}></Route>\r\n\r\n                </div>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('app'),\r\n);","function logout(setToken) {\r\n    setToken('');\r\n    localStorage.removeItem('token');\r\n}\r\n\r\nexport {\r\n    logout\r\n}"],"sourceRoot":""}